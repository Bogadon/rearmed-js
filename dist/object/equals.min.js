!function r(e,t,i){function n(s,u){if(!t[s]){if(!e[s]){var f="function"==typeof require&&require;if(!u&&f)return f(s,!0);if(o)return o(s,!0);var a=new Error("Cannot find module '"+s+"'");throw a.code="MODULE_NOT_FOUND",a}var c=t[s]={exports:{}};e[s][0].call(c.exports,function(r){var t=e[s][1][r];return n(t||r)},c,c.exports,r,e,t,i)}return t[s].exports}for(var o="function"==typeof require&&require,s=0;s<i.length;s++)n(i[s]);return n}({1:[function(r,e,t){function i(r){return null!=r&&"object"==typeof r}e.exports=i},{}],2:[function(r,e,t){function i(r,e){console.warn("Rearmed-js Overriding "+r+" method: "+e,". If this is a built-in browser method please report on Rearmed-js github issues.")}e.exports=i},{}],3:[function(r,e,t){!function(){"use strict";var e={isObjectLike:r("./../core/isObjectLike")},t=r("./../core/warn");Object.prototype.equals&&t("Object","equals"),Object.prototype.equals=function(r){for(var t in this){if(this.hasOwnProperty(t)!=r.hasOwnProperty(t))return!1;if(typeof this[t]!=typeof r[t])return!1}for(var t in r){var i=this[t],n=r[t];if(this.hasOwnProperty(t)!=r.hasOwnProperty(t))return!1;if(typeof i!=typeof n)return!1;if(this.hasOwnProperty(t))if(Array.isArray(i)&&Array.isArray(n)){if(!i.equals(n))return!1}else if(e.isObjectLike(i)&&e.isObjectLike(n)){if(!i.equals(n))return!1}else if(i!=n)return!1}return!0},Object.defineProperty(Object.prototype,"equals",{enumerable:!1})}()},{"./../core/isObjectLike":1,"./../core/warn":2}]},{},[3]);